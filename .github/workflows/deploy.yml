name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION_NAME }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t django-app-meemz-website .
          docker tag django-app-meemz-website:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest


      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "----------------------------------------"
            echo "Starting deployment process..."
            echo "----------------------------------------"
            
            echo "-----------------------------"
            echo "Logging in to AWS ECR..."
            echo "-----------------------------"
            aws ecr get-login-password --region ${{ secrets.AWS_REGION_NAME }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com
            
            cd website
            
            echo "-----------------------------"
            echo "Pulling latest images..."
            echo "-----------------------------"
            docker-compose pull
            
            echo "-----------------------------"
            echo "Stopping existing containers..."
            echo "-----------------------------"

            echo "-----------------------------"
            echo "Stopping web application..."
            echo "-----------------------------"
            docker stop web_app || true

            echo "-----------------------------"
            echo "Stopping nginx..."
            echo "-----------------------------"
            docker stop nginx || true
            
            echo "-----------------------------"
            echo "Removing stopped containers..."
            echo "-----------------------------"
            docker rm web_app nginx || true
            
            echo "-----------------------------"
            echo "Cleaning up unused images..."
            echo "-----------------------------"
            docker image prune -f
            
            echo "-----------------------------"
            echo "Starting new containers..."
            echo "-----------------------------"
            docker-compose --profile prod up -d
            
            echo "-----------------------------"
            echo "Waiting for services to be healthy..."
            echo "-----------------------------"
            sleep 10
            
            echo "-----------------------------"
            echo "Checking container status..."
            echo "-----------------------------"
            docker ps
            
            echo "-----------------------------"
            echo "Performing final cleanup..."
            echo "-----------------------------"
            docker system prune -f
            
            echo "----------------------------------------"
            echo "Deployment completed successfully!"
            echo "----------------------------------------"
            
            echo "----------------------------------------"
            echo "Deployment Summary:"
            echo "- New containers are running"
            echo "- Unused images cleaned"
            echo "- System pruned"
            echo "----------------------------------------"
            
            # Optional: Add container health check
            if docker ps | grep -q "web_app" && docker ps | grep -q "nginx"; then
              echo "All critical services are running"
            else
              echo "Warning: Some services might not be running properly"
              exit 1
            fi

