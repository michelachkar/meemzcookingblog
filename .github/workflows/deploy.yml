name: Deploy to AWS EC2 with ECR

on:
  push:
    branches:
      - main  # Modify if using a different branch for deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}

      - name: Authenticate to AWS ECR
        id: login-ecr
        run: |
          echo "----------------------------"
          echo "Authenticating to AWS ECR..."
          echo "----------------------------"
          aws ecr get-login-password --region ${{ secrets.AWS_REGION_NAME }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com
          echo "----------------------------"
          echo "Authenticated to AWS ECR successfully"
          echo "----------------------------"

      - name: Build & Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com
          IMAGE_TAG: latest
        run: |
          echo "----------------------------"
          echo "Building Docker image..."
          echo "----------------------------"
          docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          echo "----------------------------"
          echo "Docker image built successfully"
          echo "----------------------------"
          
          echo "----------------------------"
          echo "Pushing Docker image to ECR..."
          echo "----------------------------"
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          echo "----------------------------"
          echo "Docker image pushed successfully"
          echo "----------------------------"

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_KEY }}
          GITHUB_SSH_PRIVATE_KEY: ${{ secrets.GIT_PRIVATE_KEY }}
        run: |
          echo "----------------------------"
          echo "Setting up SSH keys for EC2"
          echo "----------------------------"
          # Create SSH key file for EC2
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" | tr -d '\r' > ~/.ssh/aws_key.pem
          chmod 600 ~/.ssh/aws_key.pem
          echo "----------------------------"
          echo "EC2 SSH key setup complete"
          echo "----------------------------"

          # Set up known hosts to avoid SSH fingerprint issues
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "----------------------------"
          echo "GitHub host key added to known hosts"
          echo "----------------------------"

          # Connect to EC2 and deploy
          echo "----------------------------"
          echo "Starting deployment to EC2..."
          echo "----------------------------"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "----------------------------"
            echo "Logging into ECR from EC2"
            echo "----------------------------"
            aws ecr get-login-password --region ${{ secrets.AWS_REGION_NAME }} | \
            docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com
            ls -la
            echo "JUMPJUMPJUMPJUMPJUMPJUMPJUMPJUMPJUMP"
            echo "----------------------------"
            echo "ECR login successful"
            echo "----------------------------"

            echo "----------------------------"
            echo "Pulling Docker image from ECR"
            echo "----------------------------"
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_NAME }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
            echo "----------------------------"
            echo "Docker image pulled successfully"
            echo "----------------------------"
            ls -la
            echo "JUMPJUMPJUMPJUMPJUMPJUMPJUMPJUMPJUMP"

            echo "----------------------------"
            echo "Stopping and removing existing containers"
            echo "----------------------------"
            docker-compose -f docker-compose.yml down

            echo "----------------------------"
            echo "Starting the new containers"
            echo "----------------------------"
            docker-compose -f docker-compose.yml up -d
            echo "----------------------------"
            echo "Deployment completed successfully"
            echo "----------------------------"
          EOF
          echo "----------------------------"
          echo "Deployment to EC2 completed"
          echo "----------------------------"
