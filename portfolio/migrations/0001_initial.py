# Generated by Django 5.1.5 on 2025-01-23 15:23

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CuisineType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="DifficultyLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="DishType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="EventType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="MainIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caption", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Enter the title of the recipe.",
                        max_length=150,
                        verbose_name="Recipe Title",
                    ),
                ),
                (
                    "excerpt",
                    models.CharField(
                        help_text="A brief summary of the recipe.",
                        max_length=200,
                        verbose_name="Short Description",
                    ),
                ),
                (
                    "image",
                    models.CharField(
                        help_text="Upload an image for this recipe.",
                        max_length=100,
                        verbose_name="Recipe Image",
                    ),
                ),
                ("date", models.DateField(auto_now=True, verbose_name="Last Updated")),
                (
                    "slug",
                    models.SlugField(
                        help_text="A unique slug for the recipe.",
                        unique=True,
                        verbose_name="URL Slug",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Provide step-by-step instructions for the recipe.",
                        validators=[django.core.validators.MinLengthValidator(10)],
                        verbose_name="Recipe Instructions",
                    ),
                ),
                (
                    "cuisine_type",
                    models.ForeignKey(
                        help_text="Choose the cuisine style of this recipe.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="recipes",
                        to="portfolio.cuisinetype",
                        verbose_name="Cuisine Type",
                    ),
                ),
                (
                    "difficulty_level",
                    models.ForeignKey(
                        help_text="Select the difficulty level for preparing this recipe.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="recipes",
                        to="portfolio.difficultylevel",
                        verbose_name="Difficulty Level",
                    ),
                ),
                (
                    "dish_type",
                    models.ForeignKey(
                        help_text="Select the type of dish for this recipe.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="recipes",
                        to="portfolio.dishtype",
                        verbose_name="Dish Type",
                    ),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optionally, select an event type this recipe is suitable for.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recipes",
                        to="portfolio.eventtype",
                        verbose_name="Event Type",
                    ),
                ),
                (
                    "main_ingredient",
                    models.ForeignKey(
                        help_text="Select the primary ingredient of this recipe.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="recipes",
                        to="portfolio.mainingredient",
                        verbose_name="Main Ingredient",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select tags to categorize this recipe.",
                        related_name="recipes",
                        to="portfolio.tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
        ),
    ]
